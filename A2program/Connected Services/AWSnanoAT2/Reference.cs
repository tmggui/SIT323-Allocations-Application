//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace A2program.AWSnanoAT2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AWSnanoAT2.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GenerateAllocations", ReplyAction="http://tempuri.org/IService/GenerateAllocationsResponse")]
        string GenerateAllocations(CommonClasses.ConfigurationData configData, int WCFServiceID, int deadline);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GenerateAllocations", ReplyAction="http://tempuri.org/IService/GenerateAllocationsResponse")]
        System.IAsyncResult BeginGenerateAllocations(CommonClasses.ConfigurationData configData, int WCFServiceID, int deadline, System.AsyncCallback callback, object asyncState);
        
        string EndGenerateAllocations(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Testing", ReplyAction="http://tempuri.org/IService/TestingResponse")]
        int Testing(int milliseconds);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/Testing", ReplyAction="http://tempuri.org/IService/TestingResponse")]
        System.IAsyncResult BeginTesting(int milliseconds, System.AsyncCallback callback, object asyncState);
        
        int EndTesting(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : A2program.AWSnanoAT2.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateAllocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateAllocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TestingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<A2program.AWSnanoAT2.IService>, A2program.AWSnanoAT2.IService {
        
        private BeginOperationDelegate onBeginGenerateAllocationsDelegate;
        
        private EndOperationDelegate onEndGenerateAllocationsDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateAllocationsCompletedDelegate;
        
        private BeginOperationDelegate onBeginTestingDelegate;
        
        private EndOperationDelegate onEndTestingDelegate;
        
        private System.Threading.SendOrPostCallback onTestingCompletedDelegate;
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GenerateAllocationsCompletedEventArgs> GenerateAllocationsCompleted;
        
        public event System.EventHandler<TestingCompletedEventArgs> TestingCompleted;
        
        public string GenerateAllocations(CommonClasses.ConfigurationData configData, int WCFServiceID, int deadline) {
            return base.Channel.GenerateAllocations(configData, WCFServiceID, deadline);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateAllocations(CommonClasses.ConfigurationData configData, int WCFServiceID, int deadline, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateAllocations(configData, WCFServiceID, deadline, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGenerateAllocations(System.IAsyncResult result) {
            return base.Channel.EndGenerateAllocations(result);
        }
        
        private System.IAsyncResult OnBeginGenerateAllocations(object[] inValues, System.AsyncCallback callback, object asyncState) {
            CommonClasses.ConfigurationData configData = ((CommonClasses.ConfigurationData)(inValues[0]));
            int WCFServiceID = ((int)(inValues[1]));
            int deadline = ((int)(inValues[2]));
            return this.BeginGenerateAllocations(configData, WCFServiceID, deadline, callback, asyncState);
        }
        
        private object[] OnEndGenerateAllocations(System.IAsyncResult result) {
            string retVal = this.EndGenerateAllocations(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateAllocationsCompleted(object state) {
            if ((this.GenerateAllocationsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateAllocationsCompleted(this, new GenerateAllocationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateAllocationsAsync(CommonClasses.ConfigurationData configData, int WCFServiceID, int deadline) {
            this.GenerateAllocationsAsync(configData, WCFServiceID, deadline, null);
        }
        
        public void GenerateAllocationsAsync(CommonClasses.ConfigurationData configData, int WCFServiceID, int deadline, object userState) {
            if ((this.onBeginGenerateAllocationsDelegate == null)) {
                this.onBeginGenerateAllocationsDelegate = new BeginOperationDelegate(this.OnBeginGenerateAllocations);
            }
            if ((this.onEndGenerateAllocationsDelegate == null)) {
                this.onEndGenerateAllocationsDelegate = new EndOperationDelegate(this.OnEndGenerateAllocations);
            }
            if ((this.onGenerateAllocationsCompletedDelegate == null)) {
                this.onGenerateAllocationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateAllocationsCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateAllocationsDelegate, new object[] {
                        configData,
                        WCFServiceID,
                        deadline}, this.onEndGenerateAllocationsDelegate, this.onGenerateAllocationsCompletedDelegate, userState);
        }
        
        public int Testing(int milliseconds) {
            return base.Channel.Testing(milliseconds);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTesting(int milliseconds, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTesting(milliseconds, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndTesting(System.IAsyncResult result) {
            return base.Channel.EndTesting(result);
        }
        
        private System.IAsyncResult OnBeginTesting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int milliseconds = ((int)(inValues[0]));
            return this.BeginTesting(milliseconds, callback, asyncState);
        }
        
        private object[] OnEndTesting(System.IAsyncResult result) {
            int retVal = this.EndTesting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTestingCompleted(object state) {
            if ((this.TestingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TestingCompleted(this, new TestingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TestingAsync(int milliseconds) {
            this.TestingAsync(milliseconds, null);
        }
        
        public void TestingAsync(int milliseconds, object userState) {
            if ((this.onBeginTestingDelegate == null)) {
                this.onBeginTestingDelegate = new BeginOperationDelegate(this.OnBeginTesting);
            }
            if ((this.onEndTestingDelegate == null)) {
                this.onEndTestingDelegate = new EndOperationDelegate(this.OnEndTesting);
            }
            if ((this.onTestingCompletedDelegate == null)) {
                this.onTestingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTestingCompleted);
            }
            base.InvokeAsync(this.onBeginTestingDelegate, new object[] {
                        milliseconds}, this.onEndTestingDelegate, this.onTestingCompletedDelegate, userState);
        }
    }
}
